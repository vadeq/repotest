package zws.pen.policy.old.op;
/*
* DesignState - Design Compression Technology
* @author: ptoleti
* @version: 1.0
* Created on Apr 27, 2007 9:58:02 AM
* Copywrite (c) 2007 Zero Wait-State Inc. All rights reserved
*/


import zws.data.Metadata;
import zws.service.pen.PENDataElement;
import zws.service.pen.SourceDataElement;
import zws.util.LogWriter;

import java.util.HashMap;
import java.util.Iterator;


/**
 * The Class UpdateStateAttributeOp.
 *
 * @author ptoleti
 */
public class ChangePartTypeOp extends PENDataOpBase {

  /**
   * @throws Exception Exception
   * @see zws.pen.policy.old.op.PENDataOpBase#execute()
   */
  public void execute() throws Exception {
    Metadata sourceData = null;
    String name = null;
    HashMap refMap = null;
    HashMap tempMap = new HashMap();
    PENDataElement penDataElement = null;
    String sourcePartName = null;
    try {
      refMap = getPenData().getReferenceMap();
      Iterator itr = refMap.keySet().iterator();
      LogWriter.printOnConsole("Execute in CopyAttributeOp ");
      //iterate thru ref map and get src and transform data from BOM ref object.
      while (itr.hasNext()) {
          name = (String) itr.next();
          penDataElement    = (PENDataElement) refMap.get(name);
          SourceDataElement srcDataElement = penDataElement.getSourceDataElement();
          sourceData      = srcDataElement .getSourceData();
          sourcePartName = sourceData.getName();
          LogWriter.printOnConsole("Name : " + sourcePartName);
          sourcePartName = sourcePartName.replaceFirst(this.getFromType(), this.getToType());
          LogWriter.printOnConsole("Name After change : " + sourcePartName);
          sourceData.set("name", sourcePartName);
          srcDataElement.setSourceData(sourceData);
          //penDataElement.setSourceDataElement(srcDataElement);
          tempMap.put(sourceData.getName(), penDataElement);
      }
      //getPenData().setReferenceMap(tempMap);
      setPenData(getPenData());
    } catch (Exception e) {
      e.printStackTrace();
      throw e;
    }
  }
  /**
   * @return the fromType
   */
  public String getFromType() {
    return fromType;
  }
  /**
   * @param strFromType the fromType to set
   */
  public void setFromType(String strFromType) {
    this.fromType = strFromType;
  }
  /**
   * @return the toType
   */
  public String getToType() {
    return toType;
  }
  /**
   * @param strToType the toType to set
   */
  public void setToType(String strToType) {
    this.toType = strToType;
  }

  /**   */
  private String fromType = null;
  /**   */
  private String toType = null;

}
