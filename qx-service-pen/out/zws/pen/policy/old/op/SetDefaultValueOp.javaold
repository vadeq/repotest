package zws.pen.policy.old.op;
/*
* DesignState - Design Compression Technology
* @author: ptoleti
* @version: 1.0
* Created on Apr 27, 2007 9:58:02 AM
* Copywrite (c) 2007 Zero Wait-State Inc. All rights reserved
*/


import zws.data.Metadata;
import zws.service.pen.PENDataElement;
import zws.service.pen.SourceDataElement;
import zws.service.pen.TxDataElement;
import zws.util.LogWriter;

import java.util.HashMap;
import java.util.Iterator;

/**
 * The Class UpdateStateAttributeOp.
 *
 * @author ptoleti
 */
public class SetDefaultValueOp extends PENDataOpBase {

  /**
   * @throws Exception Exception
   * @see zws.pen.policy.old.op.PENDataOpBase#execute()
   */
  public void execute() throws Exception {
    Metadata transformedData = null;
    Metadata sourceData = null;
    String name = null;
    HashMap refMap = null;
    PENDataElement penDataElement = null;
    String finalString = "";
    PENDataOp op = null;
    try {
      LogWriter.printOnConsole("Execute in SetAttributeOp ");
      Iterator itr = getOps().iterator();
      while (itr.hasNext()) {
        op = (PENDataOp) itr.next();
        passConfiguration(op);
        op.execute();
        finalString = (String) op.getResult();
        LogWriter.printOnConsole("finalString in SetAttributeOp ...." + finalString);
      }
      refMap = getPenData().getReferenceMap();
      Iterator srcTableItr = refMap.keySet().iterator();
      //iterate thru ref map and updates transform data with the attribute value.
      while (srcTableItr.hasNext()) {
          name = (String) srcTableItr.next();
          penDataElement   = (PENDataElement) refMap.get(name);
          SourceDataElement srcDataElement = penDataElement.getSourceDataElement();
          TxDataElement txDataElement = penDataElement.getTxDataElement();
          sourceData      = srcDataElement .getSourceData();
          transformedData = txDataElement.getTransformedData();
          LogWriter.printOnConsole("Name : " + sourceData.getName());
          // copy arrtibute from src data to transform data
          if(null == transformedData.get(this.getAttributeName())) {
            transformedData.set(this.getAttributeName(), finalString);
          }

          LogWriter.printOnConsole("transformedData in SetAttributeOp   " + transformedData);
          // set transform data -> bom reference table -> ref.Map -> pendata
          txDataElement.setTransformedData(transformedData);
          penDataElement.setTxDataElement(txDataElement);
          refMap.put(sourceData.getName(), penDataElement);
      }
      getPenData().setReferenceMap(refMap);
      setPenData(getPenData());
      LogWriter.printOnConsole(getPenData().getReferenceMap().toString());
    } catch (Exception e) {
      e.printStackTrace();
      throw e;
    }
  }
  /**   */
  private String attributeName = null;
  /**
   * @return the targetAttribute
   */
  public String getAttributeName() {
    return attributeName;
  }
  /**
   * @param strTargetAttribute the TargetAttribute to set
   */
  public void setAttributeName(String strAttributeName) {
    this.attributeName = strAttributeName;
  }

}
