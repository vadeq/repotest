/**
 * 
 */
package zws.qx.service;

/*
 DesignState - Design Compression Technology
 @author: eankutse
 @version: 1.0
 Created on Aug 17, 2007 10:45:15 AM
 Copywrite (c) 2007 Zero Wait-State Inc. All rights reserved */

import zws.qx.Qx;
import zws.qx.QxContext;
import zws.qx.xml.QxXML;

import zws.qx.program.QxInstruction;
//import zws.util.{}//Logwriter;

/**
 * This service generates and serves unique string ids of the form
 * <hostname>-<timestamp>-<counter>. These ids generated by this
 * service are guaranteed to be useable as valid directory and 
 * file names on Windows and UNIX systems. 
 * 
 * @author eankutse
 *
 */
public class UniqueIdQxService implements Qx {
  public QxXML executeQx(QxContext ctx, QxXML dataInstruction) {  
  String result = null;
  try {
    {}//Logwriter.printOnConsole("GetIdQxService invoked with dataInstruction :");
    {}//Logwriter.printOnConsole("" + dataInstruction);
    QxInstruction qxInstr = dataInstruction.toQxProgram();
    String method = qxInstr.getName(); 
    
    if ("getid".equalsIgnoreCase(method)) {
      result = zws.service.uniqueid.UniqueIdSvc.getId(ctx, dataInstruction);       
    }
  } catch (Exception e) {
        e.printStackTrace();
        {}//Logwriter.printOnConsole("Exception ");
  }
  return new QxXML("<getid id ='"+result+"' />");
 }
}
