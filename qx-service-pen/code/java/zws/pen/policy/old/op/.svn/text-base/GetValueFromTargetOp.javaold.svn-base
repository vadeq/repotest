package zws.pen.policy.old.op;
/*
* DesignState - Design Compression Technology
* @author: ptoleti @version: 1.0 Created on Apr 27,
* 2007 9:58:02 AM Copywrite (c) 2007 Zero Wait-State
* Inc. All rights reserved
*/

import zws.data.Metadata;
import zws.service.pen.PENDataElement;
import zws.service.pen.TargetDataElement;
import zws.util.LogWriter;

import java.util.HashMap;

/**
 * The Class UpdateStateAttributeOp.
 *
 * @author ptoleti
 */
public class GetValueFromTargetOp extends PENDataOpBase {

  /**
   * @throws Exception Exception
   * @see zws.pen.policy.old.op.PENDataOpBase#execute()
   */
  public void execute() throws Exception {
    HashMap refMap = null;
    PENDataElement penDataElement = null;
    Metadata srcData = null;
    Metadata targetData = null;
    String name = null;
    try {
      srcData = this.getPenData().getSourceData();
      refMap = getPenData().getReferenceMap();
      penDataElement    = (PENDataElement) refMap.get(srcData.getName());
      TargetDataElement targetDataElement = penDataElement.getTargetDataElement();

      targetData  = targetDataElement.getTargetData();
      name =  getAttributeName();
      LogWriter.printOnConsole("Get Target Attribute name " + name);
      String s = targetData.get(name);
      LogWriter.printOnConsole("Get Target Attribute value " + s);
      setResult(s);
    } catch (Exception e) {
      e.printStackTrace();
      throw e;
    }
  }

  /**
   *
   */
  private String attributeName = null;

  /**
   * @return the attributeName
   */
  public String getAttributeName() {
    return attributeName;
  }

  /**
   * @param attrName the attributeName to set
   */
  public void setAttributeName(String attrName) {
    this.attributeName = attrName;
  }

}
